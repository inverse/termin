name: CI
on: [push]

env:
  PHP_CS_FIXER_IGNORE_ENV: 1

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version: ['8.4', '8.3', '8.2', '8.1']
    steps:
    - uses: actions/checkout@v4
    - name: Install PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
    - name: Install dependencies
      run: composer install
    - name: Run tests
      run: |
        XDEBUG_MODE=coverage ./vendor/bin/phpunit --coverage-clover coverage.xml
    - uses: codecov/codecov-action@v5
      if: matrix.php-version == '8.4'
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
  phpstan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Install dependencies
        run: composer install
      - name: PHPStan
        run: ./vendor/bin/phpstan analyse
  php-cs-fixer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Install dependencies
        run: composer install
      - name: PHP-CS-Fixer
        run: ./vendor/bin/php-cs-fixer fix
  serverless-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Install PHP dependencies
        run: composer install
      - name: Get Node version from .mise.toml
        uses: SebRollen/toml-action@v1.2.0
        id: get-node-version
        with:
          file: .mise.toml
          field: tools.node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '${{ steps.get-node-version.outputs.value }}'
      - name: Install Node.js dependencies
        run: npm ci
      - name: Check serverless.yml
        run: npx serverless print
